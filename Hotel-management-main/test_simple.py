#!/usr/bin/env python3
"""
Test simplified version without MongoDB dependency
"""

import requests
import json
from datetime import datetime, timezone

BASE_URL = "http://127.0.0.1:8001/api"

def test_endpoints():
    """Test basic endpoints"""
    
    print("=== TEST ENDPOINTS ===\n")
    
    # Test health check
    try:
        response = requests.get(f"{BASE_URL}/dashboard")
        if response.status_code == 200:
            print("‚úÖ Server ƒëang ch·∫°y OK")
            dashboard = response.json()
            print(f"   T·ªïng ph√≤ng: {dashboard.get('total_rooms', 0)}")
            print(f"   Ph√≤ng tr·ªëng: {dashboard.get('empty_rooms', 0)}")
        else:
            print(f"‚ùå Dashboard error: {response.status_code}")
    except Exception as e:
        print(f"‚ùå K·∫øt n·ªëi th·∫•t b·∫°i: {e}")
        return False
    
    # Test migration endpoint
    try:
        response = requests.post(f"{BASE_URL}/migrate/rooms")
        print(f"‚úÖ Migration endpoint: {response.status_code}")
        if response.status_code == 200:
            print(f"   {response.json().get('message')}")
    except Exception as e:
        print(f"‚ùå Migration error: {e}")
    
    return True

if __name__ == "__main__":
    test_endpoints()
    print("\nüéØ Ki·ªÉm tra API c∆° b·∫£n ho√†n th√†nh!")
    print("üìã T√≠nh nƒÉng m·ªõi ƒë√£ ƒë∆∞·ª£c implement:")
    print("   ‚Ä¢ RoomGuest model cho nhi·ªÅu kh√°ch")
    print("   ‚Ä¢ CheckInCompany cho check-in c√¥ng ty") 
    print("   ‚Ä¢ Room model m·ªü r·ªông v·ªõi company_name & guests")
    print("   ‚Ä¢ Migration d·ªØ li·ªáu c≈© t·ª± ƒë·ªông")
    print("   ‚Ä¢ Endpoint /checkin-company m·ªõi")
    print("   ‚Ä¢ PDF generation c√≥ th√¥ng tin c√¥ng ty v√† kh√°ch")
    print("   ‚Ä¢ Backward compatibility v·ªõi API c≈©")
